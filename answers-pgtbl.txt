思考题：使用共享页面可以更快地进行以下 xv6 系统调用：
fork()：fork() 系统调用会创建一个新的进程，新进程会复制父进程的地址空间。如果使用共享页面，父进程和子进程可以共享相同的物理页面，而不需要进行复制。这样可以节省时间和内存资源。
exec()：exec() 系统调用会将一个新的程序加载到当前进程的地址空间中。如果使用共享页面，可以避免在执行新程序之前将整个地址空间清空。相反，只需加载新程序的代码和数据页面即可，共享页面的其他内容可以保持不变。
exit()：exit() 系统调用会终止当前进程并释放其占用的资源。如果使用共享页面，系统不需要花费额外的时间来清理和回收进程的地址空间，因为许多页面可以被多个进程共享。仅在最后一个使用共享页面的进程退出时，才需要进行相应的清理操作。
思考题： page0 应该主要是应用程序的代码段和数据段; 而 page2 即对应着用户栈; 中间的 page1 应该是 guard page, 无物理地址实际映射, 用于溢出检测。